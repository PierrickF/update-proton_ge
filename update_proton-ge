#!/bin/bash

# Check whether the latest release is already installed or not.
check_version() {
    LATEST_RELEASE="$(curl -s https://api.github.com/repos/GloriousEggroll/proton-ge-custom/releases/latest |
        grep browser_download_url |
        cut -d\" -f4 |
        grep .tar.gz |
        cut -d / -f8)"
    LATEST_INSTALL="$(ls ~/.steam/root/compatibilitytools.d/ |
        sort -r |
        head -1)"
    echo "The latest release is ${LATEST_RELEASE}."
    echo "The latest install is ${LATEST_INSTALL}."
    if test -d ~/.steam/root/compatibilitytools.d/${LATEST_RELEASE%%.*}; then
        echo "Nothing to do."
        exit 0
    else
        echo "New version available!"
    fi
}

# Make and move to a temporary directory.
make_tmp_dir() {
    echo "Making a temporary directory..."
    mkdir /tmp/proton-ge-custom
    cd /tmp/proton-ge-custom
}

# Download the latest proton-ge version.
download_tarball() {
    echo "Downloading tarball..."
    curl -sLOJ "$(curl -s https://api.github.com/repos/GloriousEggroll/proton-ge-custom/releases/latest |
        grep browser_download_url |
        cut -d\" -f4 |
        grep .tar.gz)"
}

# Download the checksum.
download_checksum() {
    echo "Downloading checksum..."
    curl -sLOJ "$(curl -s https://api.github.com/repos/GloriousEggroll/proton-ge-custom/releases/latest |
        grep browser_download_url |
        cut -d\" -f4 |
        grep .sha512sum)"
}

# Check the tarball with checksum.
check_tarball() {
    echo "Checking tarball..."
    sha512sum -c ./*.sha512sum
}

# Make the directory for proton-ge if it doesn't exist.
make_steam_dir() {
    echo "Making Steam directory..."
    mkdir -p ~/.steam/root/compatibilitytools.d
}

# Extract the tarball to its directory.
extract_tarball() {
    echo "Extracting tarball..."
    tar -xvf GE-Proton*.tar.gz -C ~/.steam/root/compatibilitytools.d/
}

# Remove the temporary directory so the script can be ran multiples times
# without a reboot.
remove_tmp_dir() {
    echo "Removing temporary directory..."
    cd
    rm -rf /tmp/proton-ge-custom
    echo "All done! :)"
}

main() {
    check_version
    make_tmp_dir
    download_tarball
    download_checksum
    check_tarball
    make_steam_dir
    extract_tarball
    remove_tmp_dir
}

# "-u" treats undefined variables as errors
# "-o pipefail" prevents errors in a pipeline from being masked
set -uo pipefail
main
